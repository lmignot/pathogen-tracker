apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'
apply plugin: "idea"

android {
  compileSdkVersion 27
  buildToolsVersion '28.0.0'
  defaultConfig {
    minSdkVersion 23
    targetSdkVersion 27
    targetSdkVersion 27
    versionCode 3
    versionName 'Beta'
    applicationId "eu.mignot.pathogentracker"
    versionNameSuffix '1.0.5'
    resConfigs "en"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }
  buildTypes {
    debug {
      testCoverageEnabled = true
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  // Always show the result of every unit test, even if it passes.
  testOptions.unitTests.all {
    testLogging {
      events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  sourceSets {
    androidTest.java.srcDirs += "src/androidTest/kotlin"
    test.java.srcDirs += "src/test/kotlin"
    main.java.srcDirs += "src/main/kotlin"
  }
  productFlavors {
  }
}

dependencies {

  // Android Support
  implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibVersion"
  implementation "com.android.support:recyclerview-v7:$rootProject.ext.supportLibVersion"
  implementation "com.android.support:design:$rootProject.ext.supportLibVersion"
  implementation "com.android.support:preference-v7:$rootProject.ext.supportLibVersion"
  implementation "com.android.support.constraint:constraint-layout:$rootProject.ext.constraintLayoutVersion"

  // Kotlin and Anko
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$rootProject.ext.kotlinVersion"
  implementation "org.jetbrains.anko:anko-common:$rootProject.ext.ankoVersion"
  implementation "org.jetbrains.anko:anko-sdk25:$rootProject.ext.ankoVersion"
  implementation "org.jetbrains.anko:anko-appcompat-v7:$rootProject.ext.ankoVersion"
  implementation "org.jetbrains.anko:anko-sdk25-coroutines:$rootProject.ext.ankoVersion"
  implementation "org.jetbrains.anko:anko-appcompat-v7-coroutines:$rootProject.ext.ankoVersion"

  // Google Play Services
  implementation "com.google.android.gms:play-services-location:$rootProject.ext.playLocationVersion"
  implementation "com.google.android.gms:play-services-auth:$rootProject.ext.playAuthVersion"

  // Firebase
  implementation "com.google.firebase:firebase-core:$rootProject.ext.fbCoreVersion"
  implementation "com.google.firebase:firebase-auth:$rootProject.ext.fbAuthVersion"
  implementation "com.google.firebase:firebase-firestore:$rootProject.ext.fbFirestoreVersion"
  implementation "com.google.firebase:firebase-storage:$rootProject.ext.fbStorageVersion"
  implementation "com.google.firebase:firebase-crash:$rootProject.ext.fbCrashVersion"
  implementation "com.firebaseui:firebase-ui-auth:$rootProject.ext.fbUIAuthVersion"

  // required for Firestore
  implementation "io.reactivex.rxjava2:rxjava:2.1.8"

  // Third-Party Libraries
  implementation "me.zhanghai.android.effortlesspermissions:library:$rootProject.ext.effPermVersion"
  implementation "com.github.yayaa:LocationManager:$rootProject.ext.locManVersion"
  implementation "com.stepstone.stepper:material-stepper:$rootProject.ext.stepperVersion"
  implementation "com.github.vicpinm:krealmextensions:$rootProject.ext.kRealmExtVersion"

  // Testing
  testImplementation "junit:junit:$rootProject.ext.junitVersion"
  testImplementation "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
  testImplementation "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"
  androidTestImplementation "com.android.support.test:runner:$rootProject.ext.runnerVersion"
  androidTestImplementation "com.android.support.test:rules:$rootProject.ext.rulesVersion"
  androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
  androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espressoVersion"
  androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.ext.espressoVersion"

  // UIAutomator Testing. Learn about this dependency in this projects README file.
  androidTestImplementation "com.android.support.test.uiautomator:uiautomator-v18:$rootProject.ext.uiautomatorVersion"

  // Resolve conflicts between main and test APK:
  androidTestImplementation "com.android.support:support-annotations:$rootProject.supportLibVersion"
}

kotlin {
  experimental {
    coroutines "enable"
  }
}

idea {
  module {
    sourceDirs += files("build/generated/source/kapt/main", "build/generated/source/kaptKotlin/main")
    generatedSourceDirs += files("build/generated/source/kapt/main", "build/generated/source/kaptKotlin/main")
  }
}

apply plugin: "com.google.gms.google-services"
